{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/achellesheel/blogpc114/blob/main/Data%20science-Stock%20price%20prediction%20using%20LSTM\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Tn3R-5mRo_Pj"
      },
      "source": [
        "### Stock Market Prediction And Forecasting Using Stacked LSTM"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install yfinance"
      ],
      "metadata": {
        "id": "jzqDFks5po00",
        "outputId": "b44db762-a796-493e-c0a5-c71ffff88ee1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: yfinance in /usr/local/lib/python3.11/dist-packages (0.2.52)\n",
            "Requirement already satisfied: pandas>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2.2.2)\n",
            "Requirement already satisfied: numpy>=1.16.5 in /usr/local/lib/python3.11/dist-packages (from yfinance) (1.26.4)\n",
            "Requirement already satisfied: requests>=2.31 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2.32.3)\n",
            "Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.11/dist-packages (from yfinance) (0.0.11)\n",
            "Requirement already satisfied: lxml>=4.9.1 in /usr/local/lib/python3.11/dist-packages (from yfinance) (5.3.0)\n",
            "Requirement already satisfied: platformdirs>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from yfinance) (4.3.6)\n",
            "Requirement already satisfied: pytz>=2022.5 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2024.2)\n",
            "Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2.4.6)\n",
            "Requirement already satisfied: peewee>=3.16.2 in /usr/local/lib/python3.11/dist-packages (from yfinance) (3.17.8)\n",
            "Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.11/dist-packages (from yfinance) (4.12.3)\n",
            "Requirement already satisfied: html5lib>=1.1 in /usr/local/lib/python3.11/dist-packages (from yfinance) (1.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.6)\n",
            "Requirement already satisfied: six>=1.9 in /usr/local/lib/python3.11/dist-packages (from html5lib>=1.1->yfinance) (1.17.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.11/dist-packages (from html5lib>=1.1->yfinance) (0.5.1)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.3.0->yfinance) (2.8.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.3.0->yfinance) (2025.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.31->yfinance) (3.4.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.31->yfinance) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.31->yfinance) (2.3.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.31->yfinance) (2024.12.14)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7MZjMlQDo_Pl"
      },
      "outputs": [],
      "source": [
        "### Keras and Tensorflow >2.0"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "I73AiLwQo_Pn"
      },
      "outputs": [],
      "source": [
        "### Data Collection\n",
        "import pandas_datareader as pdr\n",
        "key= 'a7df9ab9f1a8e9458904765a38c793bdc4f9c6b6'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "0FCMayaNo_Pn",
        "outputId": "b9189ac4-bd17-4e4c-ae01-54e567a86f5c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "\"#df = pdr.get_data_tiingo('AAPL', api_key=key)\\nimport pandas_datareader as pdr\\nfrom pandas_datareader.tiingo import TiingoDailyReader\\n\\n# Replace with your Tiingo API key\\nkey = 'a7df9ab9f1a8e9458904765a38c793bdc4f9c6b6'\\n\\n# Fetch data for Apple (AAPL)\\ndf = TiingoDailyReader(symbols='AAPL', api_key=key).read()\\n\\n# Display the DataFrame\\nprint(df.head())\""
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "#df = pdr.get_data_tiingo('AAPL', api_key=key)\n",
        "'''import pandas_datareader as pdr\n",
        "from pandas_datareader.tiingo import TiingoDailyReader\n",
        "\n",
        "# Replace with your Tiingo API key\n",
        "key = 'a7df9ab9f1a8e9458904765a38c793bdc4f9c6b6'\n",
        "\n",
        "# Fetch data for Apple (AAPL)\n",
        "df = TiingoDailyReader(symbols='AAPL', api_key=key).read()\n",
        "\n",
        "# Display the DataFrame\n",
        "print(df.head())'''\n",
        "#Explanation of the Error\n",
        "#The error occurs because the pandas_datareader library is trying to concatenate DataFrames internally using pd.concat(dfs, self._concat_axis).\n",
        "#However, in newer versions of pandas, the concat() function no longer accepts a second positional argument (self._concat_axis).\n",
        "#Instead, it should be passed as a keyword argument, like this:\n",
        "#pd.concat(dfs, axis=self._concat_axis)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import yfinance as yf\n",
        "\n",
        "# Fetch data for Apple (AAPL)\n",
        "df = yf.download('AAPL', start='2020-01-01', end='2023-01-01')\n",
        "\n",
        "# Display the DataFrame\n",
        "print(df.head())"
      ],
      "metadata": {
        "id": "oedD5NYp2uRB",
        "outputId": "44634ac0-36bd-4513-c1dd-b93b575272f4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r[*********************100%***********************]  1 of 1 completed"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Price           Close       High        Low       Open     Volume\n",
            "Ticker           AAPL       AAPL       AAPL       AAPL       AAPL\n",
            "Date                                                             \n",
            "2020-01-02  72.796021  72.856613  71.545387  71.799873  135480400\n",
            "2020-01-03  72.088303  72.851769  71.862900  72.020439  146322800\n",
            "2020-01-06  72.662704  72.701485  70.953995  71.206062  118387200\n",
            "2020-01-07  72.320969  72.929314  72.100410  72.672402  108872000\n",
            "2020-01-08  73.484337  73.787300  72.022843  72.022843  132079200\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "KDk8MZJio_Po"
      },
      "outputs": [],
      "source": [
        "df.to_csv('AAPL.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "id": "ZI0-IHAFo_Pp"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "id": "gMggXa8Do_Pp"
      },
      "outputs": [],
      "source": [
        "df=pd.read_csv('AAPL.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "id": "-LbXAoego_Pr",
        "outputId": "2e37f1ed-a6a7-416e-f499-6b5657fb271c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Price               Close                High                 Low  \\\n",
              "753  2022-12-23     130.48779296875  131.04196288495316  128.29089430094626   \n",
              "754  2022-12-27   128.6768341064453  130.04247788894776  127.38046911290927   \n",
              "755  2022-12-28   124.7283706665039  129.66644031626882  124.56014157673225   \n",
              "756  2022-12-29     128.26123046875  129.12217209136242  126.40079716988618   \n",
              "757  2022-12-30  128.57789611816406   128.5976922192292  126.10391953505118   \n",
              "\n",
              "                   Open    Volume  \n",
              "753  129.55757270940995  63814900  \n",
              "754  130.01279129367578  69007800  \n",
              "755   128.3205924980965  85438400  \n",
              "756  126.65808607664381  75703700  \n",
              "757  127.07372463723176  77034200  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b2890929-3e75-4f5d-9f87-ce074aa22045\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Price</th>\n",
              "      <th>Close</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Open</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>2022-12-23</td>\n",
              "      <td>130.48779296875</td>\n",
              "      <td>131.04196288495316</td>\n",
              "      <td>128.29089430094626</td>\n",
              "      <td>129.55757270940995</td>\n",
              "      <td>63814900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>2022-12-27</td>\n",
              "      <td>128.6768341064453</td>\n",
              "      <td>130.04247788894776</td>\n",
              "      <td>127.38046911290927</td>\n",
              "      <td>130.01279129367578</td>\n",
              "      <td>69007800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>2022-12-28</td>\n",
              "      <td>124.7283706665039</td>\n",
              "      <td>129.66644031626882</td>\n",
              "      <td>124.56014157673225</td>\n",
              "      <td>128.3205924980965</td>\n",
              "      <td>85438400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>2022-12-29</td>\n",
              "      <td>128.26123046875</td>\n",
              "      <td>129.12217209136242</td>\n",
              "      <td>126.40079716988618</td>\n",
              "      <td>126.65808607664381</td>\n",
              "      <td>75703700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>2022-12-30</td>\n",
              "      <td>128.57789611816406</td>\n",
              "      <td>128.5976922192292</td>\n",
              "      <td>126.10391953505118</td>\n",
              "      <td>127.07372463723176</td>\n",
              "      <td>77034200</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2890929-3e75-4f5d-9f87-ce074aa22045')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b2890929-3e75-4f5d-9f87-ce074aa22045 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b2890929-3e75-4f5d-9f87-ce074aa22045');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-369185cb-9cc5-4f3a-b9ea-79faf79bd3ec\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-369185cb-9cc5-4f3a-b9ea-79faf79bd3ec')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-369185cb-9cc5-4f3a-b9ea-79faf79bd3ec button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ],
      "source": [
        "df.tail()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "metadata": {
        "id": "eWLmszcto_Pp",
        "outputId": "b8bf9263-8067-4caf-e902-9481c14e7021",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "          Date       Close        High         Low        Open     Volume\n",
            "0   2020-01-02   72.796021   72.856613   71.545387   71.799873  135480400\n",
            "1   2020-01-03   72.088303   72.851769   71.862900   72.020439  146322800\n",
            "2   2020-01-06   72.662704   72.701485   70.953995   71.206062  118387200\n",
            "3   2020-01-07   72.320969   72.929314   72.100410   72.672402  108872000\n",
            "4   2020-01-08   73.484337   73.787300   72.022843   72.022843  132079200\n",
            "..         ...         ...         ...         ...         ...        ...\n",
            "751 2022-12-23  130.487793  131.041963  128.290894  129.557573   63814900\n",
            "752 2022-12-27  128.676834  130.042478  127.380469  130.012791   69007800\n",
            "753 2022-12-28  124.728371  129.666440  124.560142  128.320592   85438400\n",
            "754 2022-12-29  128.261230  129.122172  126.400797  126.658086   75703700\n",
            "755 2022-12-30  128.577896  128.597692  126.103920  127.073725   77034200\n",
            "\n",
            "[756 rows x 6 columns]\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Example data\n",
        "\n",
        "\n",
        "# Create DataFrame\n",
        "df1 = pd.DataFrame(df)\n",
        "\n",
        "# Remove the first two rows (metadata)\n",
        "df1 = df1.iloc[2:].reset_index(drop=True)\n",
        "\n",
        "# Rename columns using the first row of the original DataFrame\n",
        "df1.columns = ['Date', 'Close', 'High', 'Low', 'Open', 'Volume']\n",
        "\n",
        "# Convert columns to appropriate data types\n",
        "df1['Date'] = pd.to_datetime(df1['Date'])\n",
        "df1['Close'] = pd.to_numeric(df1['Close'])\n",
        "df1['High'] = pd.to_numeric(df1['High'])\n",
        "df1['Low'] = pd.to_numeric(df1['Low'])\n",
        "df1['Open'] = pd.to_numeric(df1['Open'])\n",
        "df1['Volume'] = pd.to_numeric(df1['Volume'])\n",
        "\n",
        "# Display the cleaned DataFrame\n",
        "print(df1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "metadata": {
        "id": "1jpMIt1ho_Pr"
      },
      "outputs": [],
      "source": [
        "df2=df1.reset_index()['Close']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "metadata": {
        "id": "pUmmwGxGo_Ps",
        "outputId": "d721397e-0f4d-41d7-b609-0dd2657214fc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       72.796021\n",
              "1       72.088303\n",
              "2       72.662704\n",
              "3       72.320969\n",
              "4       73.484337\n",
              "          ...    \n",
              "751    130.487793\n",
              "752    128.676834\n",
              "753    124.728371\n",
              "754    128.261230\n",
              "755    128.577896\n",
              "Name: Close, Length: 756, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Close</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>72.796021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>72.088303</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>72.662704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>72.320969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>73.484337</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>751</th>\n",
              "      <td>130.487793</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>752</th>\n",
              "      <td>128.676834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>124.728371</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>128.261230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>128.577896</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>756 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ],
      "source": [
        "df2"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "metadata": {
        "id": "OWDk8BsUo_Ps",
        "outputId": "007691bb-726c-4074-9920-99714fc148aa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Plot the 'Close' column against the 'Date' column\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(df1['Date'], df1['Close'], label='Close Price')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('Close Price')\n",
        "plt.title('AAPL Stock Price Over Time')\n",
        "plt.legend()\n",
        "plt.grid()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "41aOOuJSo_Pt"
      },
      "outputs": [],
      "source": [
        "### LSTM are sensitive to the scale of the data. so we apply MinMax scaler"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 42,
      "metadata": {
        "id": "kbcXLTMZo_Pt"
      },
      "outputs": [],
      "source": [
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 43,
      "metadata": {
        "id": "AArHbk7Xo_Pt",
        "outputId": "e7ef4411-a219-4eba-9f2f-928797496a6e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       72.796021\n",
              "1       72.088303\n",
              "2       72.662704\n",
              "3       72.320969\n",
              "4       73.484337\n",
              "          ...    \n",
              "751    130.487793\n",
              "752    128.676834\n",
              "753    124.728371\n",
              "754    128.261230\n",
              "755    128.577896\n",
              "Name: Close, Length: 756, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Close</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>72.796021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>72.088303</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>72.662704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>72.320969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>73.484337</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>751</th>\n",
              "      <td>130.487793</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>752</th>\n",
              "      <td>128.676834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>124.728371</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>128.261230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>128.577896</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>756 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ],
      "source": [
        "df2"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 44,
      "metadata": {
        "id": "RmiguGkAo_Pt"
      },
      "outputs": [],
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "scaler=MinMaxScaler(feature_range=(0,1))\n",
        "df1=scaler.fit_transform(np.array(df2).reshape(-1,1))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 45,
      "metadata": {
        "id": "P2D6ZStKo_Pu",
        "outputId": "48000d69-8df8-4ca4-992d-b5bb94963d05",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0       72.796021\n",
            "1       72.088303\n",
            "2       72.662704\n",
            "3       72.320969\n",
            "4       73.484337\n",
            "          ...    \n",
            "751    130.487793\n",
            "752    128.676834\n",
            "753    124.728371\n",
            "754    128.261230\n",
            "755    128.577896\n",
            "Name: Close, Length: 756, dtype: float64\n"
          ]
        }
      ],
      "source": [
        "print(df2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 48,
      "metadata": {
        "id": "b1NDWQUjo_Pu",
        "outputId": "0fafc59c-e464-4019-910c-b00a904d4be6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training data size: 491\n",
            "Test data size: 265\n"
          ]
        }
      ],
      "source": [
        "##splitting dataset into train and test split\n",
        "#training_size=int(len(df2)*0.65)\n",
        "#test_size=len(df2)-training_size\n",
        "#train_data,test_data=df2[0:training_size,:],df2[training_size:len(df2),:1]\n",
        "# Reset index and extract the 'Close' column\n",
        "\n",
        "\n",
        "# Splitting dataset into train and test sets\n",
        "training_size = int(len(df2) * 0.65)  # 65% for training\n",
        "test_size = len(df2) - training_size  # Remaining 35% for testing\n",
        "\n",
        "# Split the data\n",
        "train_data = df2[:training_size]  # Training data\n",
        "test_data = df2[training_size:]   # Testing data\n",
        "\n",
        "# Print the sizes of the splits\n",
        "print(f\"Training data size: {len(train_data)}\")\n",
        "print(f\"Test data size: {len(test_data)}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 49,
      "metadata": {
        "id": "qdsVmUZjo_Pu",
        "outputId": "9c1ac7ff-8e38-40eb-9a34-b67e4e0d2ea8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(491, 265)"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ],
      "source": [
        "training_size,test_size"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "id": "gx_nfPdeo_Pv",
        "outputId": "8a9fe201-536f-4eaa-85a1-8db4e523306f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       72.796021\n",
              "1       72.088303\n",
              "2       72.662704\n",
              "3       72.320969\n",
              "4       73.484337\n",
              "          ...    \n",
              "486    162.655594\n",
              "487    168.421112\n",
              "488    172.258286\n",
              "489    171.746643\n",
              "490    176.557861\n",
              "Name: Close, Length: 491, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Close</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>72.796021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>72.088303</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>72.662704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>72.320969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>73.484337</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>486</th>\n",
              "      <td>162.655594</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>487</th>\n",
              "      <td>168.421112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>172.258286</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>171.746643</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>176.557861</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>491 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ],
      "source": [
        "train_data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 53,
      "metadata": {
        "id": "kjmAVvsho_Pv"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "\n",
        "# Convert an array of values into a dataset matrix\n",
        "def create_dataset(dataset, time_step=1):\n",
        "    dataX, dataY = [], []\n",
        "    for i in range(len(dataset) - time_step - 1):\n",
        "        a = dataset[i:(i + time_step)]  # Slice the dataset\n",
        "        dataX.append(a)\n",
        "        dataY.append(dataset[i + time_step])  # Target value\n",
        "    return np.array(dataX), np.array(dataY)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 54,
      "metadata": {
        "id": "OBAAH8Gpo_Pv",
        "outputId": "e5acf54c-b664-417f-aa0c-9cf9433ec5e1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "X_train shape: (390, 100)\n",
            "y_train shape: (390,)\n",
            "X_test shape: (164, 100)\n",
            "y_test shape: (164,)\n"
          ]
        }
      ],
      "source": [
        "# reshape into X=t,t+1,t+2,t+3 and Y=t+4\n",
        "#time_step = 100\n",
        "#X_train, y_train = create_dataset(train_data, time_step)\n",
        "#X_test, ytest = create_dataset(test_data, time_step)\n",
        "\n",
        "# Convert train_data and test_data to NumPy arrays\n",
        "train_data = train_data.values  # Convert pandas Series to NumPy array\n",
        "test_data = test_data.values    # Convert pandas Series to NumPy array\n",
        "\n",
        "# Reshape into X=t,t+1,t+2,t+3 and Y=t+4\n",
        "time_step = 100\n",
        "X_train, y_train = create_dataset(train_data, time_step)\n",
        "X_test, y_test = create_dataset(test_data, time_step)\n",
        "\n",
        "# Print shapes to verify\n",
        "print(\"X_train shape:\", X_train.shape)\n",
        "print(\"y_train shape:\", y_train.shape)\n",
        "print(\"X_test shape:\", X_test.shape)\n",
        "print(\"y_test shape:\", y_test.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 55,
      "metadata": {
        "id": "br6VChA6o_Pw",
        "outputId": "6935ea56-6e4d-4336-a528-4e2ba1efce84",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(390, 100)\n",
            "(390,)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(None, None)"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ],
      "source": [
        "print(X_train.shape), print(y_train.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 58,
      "metadata": {
        "id": "oq1144quo_Pw",
        "outputId": "b0be7470-884b-4a77-c81e-2006155fd6ad",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(164, 100)\n",
            "(164,)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(None, None)"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ],
      "source": [
        "print(X_test.shape), print(y_test.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 59,
      "metadata": {
        "id": "J_TyW-Mlo_Px"
      },
      "outputs": [],
      "source": [
        "# reshape input to be [samples, time steps, features] which is required for LSTM\n",
        "X_train =X_train.reshape(X_train.shape[0],X_train.shape[1] , 1)\n",
        "X_test = X_test.reshape(X_test.shape[0],X_test.shape[1] , 1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 60,
      "metadata": {
        "id": "y1ZUgjgEo_Px"
      },
      "outputs": [],
      "source": [
        "### Create the Stacked LSTM model\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense\n",
        "from tensorflow.keras.layers import LSTM"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 61,
      "metadata": {
        "id": "GaG8DwoXo_Px",
        "outputId": "95331758-4648-41d4-948a-9f8de12badad",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/keras/src/layers/rnn/rnn.py:204: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
            "  super().__init__(**kwargs)\n"
          ]
        }
      ],
      "source": [
        "model=Sequential()\n",
        "model.add(LSTM(50,return_sequences=True,input_shape=(100,1)))\n",
        "model.add(LSTM(50,return_sequences=True))\n",
        "model.add(LSTM(50))\n",
        "model.add(Dense(1))\n",
        "model.compile(loss='mean_squared_error',optimizer='adam')\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 62,
      "metadata": {
        "id": "6eL1WWk1o_Py",
        "outputId": "e93fca4b-6258-4c3d-a598-702be95b16f6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 257
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1mModel: \"sequential\"\u001b[0m\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ lstm (\u001b[38;5;33mLSTM\u001b[0m)                          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │          \u001b[38;5;34m10,400\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ lstm_1 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │          \u001b[38;5;34m20,200\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ lstm_2 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m50\u001b[0m)                  │          \u001b[38;5;34m20,200\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)                   │              \u001b[38;5;34m51\u001b[0m │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ lstm (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">10,400</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ lstm_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">20,200</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ lstm_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)                  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">20,200</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)                   │              <span style=\"color: #00af00; text-decoration-color: #00af00\">51</span> │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m50,851\u001b[0m (198.64 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">50,851</span> (198.64 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m50,851\u001b[0m (198.64 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">50,851</span> (198.64 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "model.summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 63,
      "metadata": {
        "id": "KqwKxs4uo_Py",
        "outputId": "3368d414-480a-41ae-e6a6-0d749f08f048",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 257
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1mModel: \"sequential\"\u001b[0m\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ lstm (\u001b[38;5;33mLSTM\u001b[0m)                          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │          \u001b[38;5;34m10,400\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ lstm_1 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │          \u001b[38;5;34m20,200\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ lstm_2 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m50\u001b[0m)                  │          \u001b[38;5;34m20,200\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)                   │              \u001b[38;5;34m51\u001b[0m │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ lstm (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">10,400</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ lstm_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">20,200</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ lstm_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)                  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">20,200</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)                   │              <span style=\"color: #00af00; text-decoration-color: #00af00\">51</span> │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m50,851\u001b[0m (198.64 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">50,851</span> (198.64 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m50,851\u001b[0m (198.64 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">50,851</span> (198.64 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "model.summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "30PQ2zOzo_Py"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 65,
      "metadata": {
        "id": "A1XF_YgPo_Py",
        "outputId": "ad2052ce-d09e-404d-c055-8bcf65f6cfaa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 311ms/step - loss: 15934.7109 - val_loss: 21063.7852\n",
            "Epoch 2/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 273ms/step - loss: 15554.7910 - val_loss: 20509.8574\n",
            "Epoch 3/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 157ms/step - loss: 14881.0449 - val_loss: 20093.9355\n",
            "Epoch 4/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 180ms/step - loss: 14872.9707 - val_loss: 19757.3633\n",
            "Epoch 5/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 14384.4150 - val_loss: 19457.9219\n",
            "Epoch 6/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 14295.3809 - val_loss: 19193.7324\n",
            "Epoch 7/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 154ms/step - loss: 13668.4062 - val_loss: 18956.5566\n",
            "Epoch 8/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 13955.8623 - val_loss: 18772.0254\n",
            "Epoch 9/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 13679.6670 - val_loss: 18619.8867\n",
            "Epoch 10/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 160ms/step - loss: 13179.9912 - val_loss: 18483.2090\n",
            "Epoch 11/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 252ms/step - loss: 13191.0811 - val_loss: 18356.7598\n",
            "Epoch 12/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 262ms/step - loss: 13267.0967 - val_loss: 18236.9453\n",
            "Epoch 13/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 154ms/step - loss: 13129.6660 - val_loss: 18122.1152\n",
            "Epoch 14/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 13013.6416 - val_loss: 18010.7012\n",
            "Epoch 15/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 12851.6572 - val_loss: 17902.3984\n",
            "Epoch 16/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 13018.1787 - val_loss: 17795.7891\n",
            "Epoch 17/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 12795.9004 - val_loss: 17691.1562\n",
            "Epoch 18/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 12691.3145 - val_loss: 17587.8789\n",
            "Epoch 19/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 12698.0059 - val_loss: 17485.7402\n",
            "Epoch 20/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 12455.7520 - val_loss: 17385.1191\n",
            "Epoch 21/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 200ms/step - loss: 12340.9512 - val_loss: 17286.1973\n",
            "Epoch 22/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 303ms/step - loss: 12302.1426 - val_loss: 17188.0508\n",
            "Epoch 23/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 156ms/step - loss: 12039.9043 - val_loss: 17090.9316\n",
            "Epoch 24/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 161ms/step - loss: 12041.2715 - val_loss: 16994.5156\n",
            "Epoch 25/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 12198.0703 - val_loss: 16898.7871\n",
            "Epoch 26/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 11951.8496 - val_loss: 16804.3262\n",
            "Epoch 27/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 159ms/step - loss: 12017.2334 - val_loss: 16710.5039\n",
            "Epoch 28/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 11759.3281 - val_loss: 16617.1426\n",
            "Epoch 29/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 11821.3486 - val_loss: 16524.4180\n",
            "Epoch 30/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 219ms/step - loss: 11635.2148 - val_loss: 16432.3340\n",
            "Epoch 31/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 240ms/step - loss: 11543.4834 - val_loss: 16341.0117\n",
            "Epoch 32/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 256ms/step - loss: 11480.6787 - val_loss: 16249.7227\n",
            "Epoch 33/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 170ms/step - loss: 11682.4082 - val_loss: 16159.2744\n",
            "Epoch 34/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 11337.0312 - val_loss: 16069.7578\n",
            "Epoch 35/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 159ms/step - loss: 11254.9619 - val_loss: 15980.5117\n",
            "Epoch 36/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 11117.9287 - val_loss: 15892.0732\n",
            "Epoch 37/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 11061.0684 - val_loss: 15803.9590\n",
            "Epoch 38/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 11023.2422 - val_loss: 15716.7119\n",
            "Epoch 39/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 10770.1309 - val_loss: 15629.9883\n",
            "Epoch 40/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 10857.9121 - val_loss: 15543.1133\n",
            "Epoch 41/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 190ms/step - loss: 10833.2520 - val_loss: 15456.7607\n",
            "Epoch 42/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 255ms/step - loss: 10806.3242 - val_loss: 15370.4512\n",
            "Epoch 43/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 156ms/step - loss: 10765.9316 - val_loss: 15285.1494\n",
            "Epoch 44/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 10635.4561 - val_loss: 15200.4980\n",
            "Epoch 45/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 10616.1055 - val_loss: 15116.3320\n",
            "Epoch 46/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 10479.4531 - val_loss: 15033.1299\n",
            "Epoch 47/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 10414.8594 - val_loss: 14950.4639\n",
            "Epoch 48/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 10380.9287 - val_loss: 14867.4785\n",
            "Epoch 49/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 10259.0303 - val_loss: 14784.4072\n",
            "Epoch 50/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 10074.6777 - val_loss: 14701.6855\n",
            "Epoch 51/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 250ms/step - loss: 10126.0000 - val_loss: 14619.5264\n",
            "Epoch 52/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 260ms/step - loss: 10130.4717 - val_loss: 14537.7793\n",
            "Epoch 53/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 165ms/step - loss: 10014.3691 - val_loss: 14457.2168\n",
            "Epoch 54/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 9936.8750 - val_loss: 14376.9014\n",
            "Epoch 55/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 9782.7178 - val_loss: 14297.5684\n",
            "Epoch 56/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 9672.2617 - val_loss: 14218.4463\n",
            "Epoch 57/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 9820.5801 - val_loss: 14139.2988\n",
            "Epoch 58/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 154ms/step - loss: 9816.8135 - val_loss: 14061.1514\n",
            "Epoch 59/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 9433.3770 - val_loss: 13983.8809\n",
            "Epoch 60/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 9583.8604 - val_loss: 13906.9209\n",
            "Epoch 61/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 174ms/step - loss: 9593.8975 - val_loss: 13830.1494\n",
            "Epoch 62/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 249ms/step - loss: 9553.4229 - val_loss: 13753.5166\n",
            "Epoch 63/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 156ms/step - loss: 9448.6611 - val_loss: 13677.2207\n",
            "Epoch 64/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 160ms/step - loss: 9367.6348 - val_loss: 13601.1523\n",
            "Epoch 65/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 9380.3604 - val_loss: 13524.9541\n",
            "Epoch 66/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 9201.1953 - val_loss: 13449.9453\n",
            "Epoch 67/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 154ms/step - loss: 9185.2676 - val_loss: 13375.2207\n",
            "Epoch 68/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 159ms/step - loss: 9051.2871 - val_loss: 13300.5117\n",
            "Epoch 69/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 9030.8389 - val_loss: 13225.8213\n",
            "Epoch 70/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 163ms/step - loss: 9057.5293 - val_loss: 13151.7305\n",
            "Epoch 71/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 232ms/step - loss: 8891.3877 - val_loss: 13078.5215\n",
            "Epoch 72/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 174ms/step - loss: 8987.4346 - val_loss: 13004.9971\n",
            "Epoch 73/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 152ms/step - loss: 8762.7324 - val_loss: 12932.7168\n",
            "Epoch 74/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 8739.8301 - val_loss: 12860.8643\n",
            "Epoch 75/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 8735.4971 - val_loss: 12789.1846\n",
            "Epoch 76/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 8657.3721 - val_loss: 12718.3320\n",
            "Epoch 77/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 154ms/step - loss: 8557.5879 - val_loss: 12647.9590\n",
            "Epoch 78/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 8575.6045 - val_loss: 12578.0674\n",
            "Epoch 79/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 194ms/step - loss: 8492.0732 - val_loss: 12508.0889\n",
            "Epoch 80/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 220ms/step - loss: 8454.6992 - val_loss: 12438.3721\n",
            "Epoch 81/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 8451.5508 - val_loss: 12369.0312\n",
            "Epoch 82/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 8177.7002 - val_loss: 12299.6895\n",
            "Epoch 83/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 8302.1162 - val_loss: 12230.1631\n",
            "Epoch 84/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 155ms/step - loss: 8240.3486 - val_loss: 12161.1680\n",
            "Epoch 85/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 159ms/step - loss: 8122.2231 - val_loss: 12092.7090\n",
            "Epoch 86/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 7947.9580 - val_loss: 12024.5039\n",
            "Epoch 87/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 7983.4580 - val_loss: 11956.5146\n",
            "Epoch 88/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 7927.8115 - val_loss: 11888.3672\n",
            "Epoch 89/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 251ms/step - loss: 7858.9336 - val_loss: 11820.6992\n",
            "Epoch 90/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 257ms/step - loss: 7734.6934 - val_loss: 11753.5703\n",
            "Epoch 91/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 7718.0400 - val_loss: 11686.3115\n",
            "Epoch 92/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 161ms/step - loss: 7799.4966 - val_loss: 11619.8457\n",
            "Epoch 93/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 158ms/step - loss: 7730.3184 - val_loss: 11554.0547\n",
            "Epoch 94/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 7500.6836 - val_loss: 11489.1719\n",
            "Epoch 95/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 7528.0210 - val_loss: 11423.9971\n",
            "Epoch 96/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 156ms/step - loss: 7489.3574 - val_loss: 11358.0889\n",
            "Epoch 97/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 157ms/step - loss: 7595.6377 - val_loss: 11292.8105\n",
            "Epoch 98/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 154ms/step - loss: 7334.7217 - val_loss: 11228.5508\n",
            "Epoch 99/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 244ms/step - loss: 7425.0156 - val_loss: 11164.4023\n",
            "Epoch 100/100\n",
            "\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 259ms/step - loss: 7277.8286 - val_loss: 11100.2510\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.history.History at 0x7d32b9ddbed0>"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ],
      "source": [
        "model.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=100,batch_size=64,verbose=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 66,
      "metadata": {
        "id": "gBazhfA5o_Py"
      },
      "outputs": [],
      "source": [
        "import tensorflow as tf"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 67,
      "metadata": {
        "id": "SVzoz1Sho_Pz",
        "outputId": "3d64aa90-c6e7-4230-ce4c-0e974b5ea1b9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'2.17.1'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 67
        }
      ],
      "source": [
        "tf.__version__"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 68,
      "metadata": {
        "id": "7y1CWSxwo_Pz",
        "outputId": "1ab4e088-c21a-449a-88d2-d658d6ab0eb6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 70ms/step\n",
            "\u001b[1m6/6\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 31ms/step\n"
          ]
        }
      ],
      "source": [
        "### Lets Do the prediction and check performance metrics\n",
        "train_predict=model.predict(X_train)\n",
        "test_predict=model.predict(X_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 69,
      "metadata": {
        "id": "w3XS3w1bo_Pz"
      },
      "outputs": [],
      "source": [
        "##Transformback to original form\n",
        "train_predict=scaler.inverse_transform(train_predict)\n",
        "test_predict=scaler.inverse_transform(test_predict)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 70,
      "metadata": {
        "id": "MfUzHrxMo_Pz",
        "outputId": "66d90df8-d0d9-41fd-830d-598d50f796b2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5122.199984149388"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ],
      "source": [
        "### Calculate RMSE performance metrics\n",
        "import math\n",
        "from sklearn.metrics import mean_squared_error\n",
        "math.sqrt(mean_squared_error(y_train,train_predict))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 82,
      "metadata": {
        "id": "QgV-5JGAo_P0",
        "outputId": "9ea6e899-75d2-48f6-bd55-e3837f81c8dc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5100.457025482291"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ],
      "source": [
        "### Test Data RMSE\n",
        "math.sqrt(mean_squared_error(y_test,test_predict))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 83,
      "metadata": {
        "id": "i8K1owRLo_P0",
        "outputId": "b4106c48-9e56-4b06-91e9-35af1534202c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "### Plotting\n",
        "# shift train predictions for plotting\n",
        "look_back=100\n",
        "trainPredictPlot = numpy.empty_like(df2)\n",
        "trainPredictPlot[:, :] = np.nan\n",
        "trainPredictPlot[look_back:len(train_predict)+look_back, :] = train_predict\n",
        "# shift test predictions for plotting\n",
        "testPredictPlot = numpy.empty_like(df2)\n",
        "testPredictPlot[:, :] = numpy.nan\n",
        "testPredictPlot[len(train_predict)+(look_back*2)+1:len(df2)-1, :] = test_predict\n",
        "# plot baseline and predictions\n",
        "plt.plot(scaler.inverse_transform(df2))\n",
        "plt.plot(trainPredictPlot)\n",
        "plt.plot(testPredictPlot)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 87,
      "metadata": {
        "id": "G7yNUVM2o_P0",
        "outputId": "813cd232-2702-43a9-b39b-22c4b32ed457",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "265"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ],
      "source": [
        "len(test_data)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 95,
      "metadata": {
        "id": "KqRGUusPo_P7",
        "outputId": "32c83e9f-5dc1-4f35-a5d2-5cad3f990d6e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1, 100)"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ],
      "source": [
        "x_input=test_data[165:].reshape(1,-1)\n",
        "x_input.shape\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 78,
      "metadata": {
        "id": "xlTnHc2io_P7"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 78,
      "metadata": {
        "id": "6Htys7djo_P7"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 96,
      "metadata": {
        "id": "aBsbXJPJo_P7"
      },
      "outputs": [],
      "source": [
        "temp_input=list(x_input)\n",
        "temp_input=temp_input[0].tolist()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 97,
      "metadata": {
        "id": "VnlGKE20o_P7",
        "outputId": "70c2017e-97b2-4d7e-d919-aa4682dcaddd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[167.20144653320312,\n",
              " 166.46047973632812,\n",
              " 170.02700805664062,\n",
              " 171.1038818359375,\n",
              " 170.94578552246094,\n",
              " 172.4474639892578,\n",
              " 172.0523223876953,\n",
              " 169.4539794921875,\n",
              " 165.55154418945312,\n",
              " 165.2156524658203,\n",
              " 165.5120391845703,\n",
              " 167.98191833496094,\n",
              " 161.64915466308594,\n",
              " 159.4361114501953,\n",
              " 156.9958953857422,\n",
              " 155.3262481689453,\n",
              " 156.0573272705078,\n",
              " 153.93321228027344,\n",
              " 152.66860961914062,\n",
              " 154.08140563964844,\n",
              " 152.59947204589844,\n",
              " 155.47442626953125,\n",
              " 161.46142578125,\n",
              " 151.9869384765625,\n",
              " 153.43923950195312,\n",
              " 150.53463745117188,\n",
              " 148.88475036621094,\n",
              " 152.6192169189453,\n",
              " 155.01007080078125,\n",
              " 151.86837768554688,\n",
              " 150.9001922607422,\n",
              " 148.6179962158203,\n",
              " 148.95391845703125,\n",
              " 149.9320068359375,\n",
              " 148.03512573242188,\n",
              " 140.76377868652344,\n",
              " 136.5353546142578,\n",
              " 140.734130859375,\n",
              " 144.3401641845703,\n",
              " 144.63653564453125,\n",
              " 143.67820739746094,\n",
              " 138.40255737304688,\n",
              " 138.72860717773438,\n",
              " 137.3059539794922,\n",
              " 136.67364501953125,\n",
              " 141.26763916015625,\n",
              " 136.7131805419922,\n",
              " 140.69461059570312,\n",
              " 142.01846313476562,\n",
              " 142.1271514892578,\n",
              " 141.66281127929688,\n",
              " 145.49606323242188,\n",
              " 147.64979553222656,\n",
              " 150.5050048828125,\n",
              " 147.551025390625,\n",
              " 143.0558319091797,\n",
              " 153.8640594482422,\n",
              " 151.49295043945312,\n",
              " 148.83535766601562,\n",
              " 143.28306579589844,\n",
              " 137.20713806152344,\n",
              " 136.93995666503906,\n",
              " 137.47433471679688,\n",
              " 138.04827880859375,\n",
              " 133.46649169921875,\n",
              " 145.34158325195312,\n",
              " 148.14215087890625,\n",
              " 146.7369384765625,\n",
              " 148.4785919189453,\n",
              " 147.24160766601562,\n",
              " 149.15155029296875,\n",
              " 149.71560668945312,\n",
              " 146.4697265625,\n",
              " 148.6171417236328,\n",
              " 149.49789428710938,\n",
              " 146.56869506835938,\n",
              " 142.7191619873047,\n",
              " 139.7008819580078,\n",
              " 146.48953247070312,\n",
              " 146.76661682128906,\n",
              " 146.2718048095703,\n",
              " 145.10411071777344,\n",
              " 141.4228057861328,\n",
              " 139.4733123779297,\n",
              " 141.16549682617188,\n",
              " 140.6806182861328,\n",
              " 142.9863739013672,\n",
              " 143.95616149902344,\n",
              " 141.71969604492188,\n",
              " 135.0795135498047,\n",
              " 133.1102294921875,\n",
              " 130.99249267578125,\n",
              " 130.9232177734375,\n",
              " 134.04043579101562,\n",
              " 130.85394287109375,\n",
              " 130.48779296875,\n",
              " 128.6768341064453,\n",
              " 124.7283706665039,\n",
              " 128.26123046875,\n",
              " 128.57789611816406]"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ],
      "source": [
        "temp_input"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 98,
      "metadata": {
        "id": "Gk8gptrvo_P8",
        "outputId": "c3268078-b084-4733-e679-29ab4d5aa7ff",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[41.68435]\n",
            "101\n",
            "1 day input [166.46047974 170.02700806 171.10388184 170.94578552 172.44746399\n",
            " 172.05232239 169.45397949 165.55154419 165.21565247 165.51203918\n",
            " 167.98191833 161.64915466 159.43611145 156.99589539 155.32624817\n",
            " 156.05732727 153.93321228 152.66860962 154.08140564 152.59947205\n",
            " 155.47442627 161.46142578 151.98693848 153.4392395  150.53463745\n",
            " 148.88475037 152.61921692 155.0100708  151.86837769 150.90019226\n",
            " 148.61799622 148.95391846 149.93200684 148.03512573 140.76377869\n",
            " 136.53535461 140.73413086 144.34016418 144.63653564 143.6782074\n",
            " 138.40255737 138.72860718 137.30595398 136.67364502 141.26763916\n",
            " 136.71318054 140.6946106  142.01846313 142.12715149 141.66281128\n",
            " 145.49606323 147.64979553 150.50500488 147.55102539 143.05583191\n",
            " 153.86405945 151.49295044 148.83535767 143.2830658  137.20713806\n",
            " 136.93995667 137.47433472 138.04827881 133.4664917  145.34158325\n",
            " 148.14215088 146.73693848 148.47859192 147.24160767 149.15155029\n",
            " 149.71560669 146.46972656 148.61714172 149.49789429 146.56869507\n",
            " 142.71916199 139.70088196 146.48953247 146.76661682 146.27180481\n",
            " 145.10411072 141.42280579 139.47331238 141.16549683 140.68061829\n",
            " 142.9863739  143.9561615  141.71969604 135.07951355 133.11022949\n",
            " 130.99249268 130.92321777 134.04043579 130.85394287 130.48779297\n",
            " 128.67683411 124.72837067 128.26123047 128.57789612  41.68434906]\n",
            "1 day output [[41.68435]]\n",
            "2 day input [170.02700806 171.10388184 170.94578552 172.44746399 172.05232239\n",
            " 169.45397949 165.55154419 165.21565247 165.51203918 167.98191833\n",
            " 161.64915466 159.43611145 156.99589539 155.32624817 156.05732727\n",
            " 153.93321228 152.66860962 154.08140564 152.59947205 155.47442627\n",
            " 161.46142578 151.98693848 153.4392395  150.53463745 148.88475037\n",
            " 152.61921692 155.0100708  151.86837769 150.90019226 148.61799622\n",
            " 148.95391846 149.93200684 148.03512573 140.76377869 136.53535461\n",
            " 140.73413086 144.34016418 144.63653564 143.6782074  138.40255737\n",
            " 138.72860718 137.30595398 136.67364502 141.26763916 136.71318054\n",
            " 140.6946106  142.01846313 142.12715149 141.66281128 145.49606323\n",
            " 147.64979553 150.50500488 147.55102539 143.05583191 153.86405945\n",
            " 151.49295044 148.83535767 143.2830658  137.20713806 136.93995667\n",
            " 137.47433472 138.04827881 133.4664917  145.34158325 148.14215088\n",
            " 146.73693848 148.47859192 147.24160767 149.15155029 149.71560669\n",
            " 146.46972656 148.61714172 149.49789429 146.56869507 142.71916199\n",
            " 139.70088196 146.48953247 146.76661682 146.27180481 145.10411072\n",
            " 141.42280579 139.47331238 141.16549683 140.68061829 142.9863739\n",
            " 143.9561615  141.71969604 135.07951355 133.11022949 130.99249268\n",
            " 130.92321777 134.04043579 130.85394287 130.48779297 128.67683411\n",
            " 124.72837067 128.26123047 128.57789612  41.68434906  41.68434906]\n",
            "2 day output [[41.68435]]\n",
            "3 day input [171.10388184 170.94578552 172.44746399 172.05232239 169.45397949\n",
            " 165.55154419 165.21565247 165.51203918 167.98191833 161.64915466\n",
            " 159.43611145 156.99589539 155.32624817 156.05732727 153.93321228\n",
            " 152.66860962 154.08140564 152.59947205 155.47442627 161.46142578\n",
            " 151.98693848 153.4392395  150.53463745 148.88475037 152.61921692\n",
            " 155.0100708  151.86837769 150.90019226 148.61799622 148.95391846\n",
            " 149.93200684 148.03512573 140.76377869 136.53535461 140.73413086\n",
            " 144.34016418 144.63653564 143.6782074  138.40255737 138.72860718\n",
            " 137.30595398 136.67364502 141.26763916 136.71318054 140.6946106\n",
            " 142.01846313 142.12715149 141.66281128 145.49606323 147.64979553\n",
            " 150.50500488 147.55102539 143.05583191 153.86405945 151.49295044\n",
            " 148.83535767 143.2830658  137.20713806 136.93995667 137.47433472\n",
            " 138.04827881 133.4664917  145.34158325 148.14215088 146.73693848\n",
            " 148.47859192 147.24160767 149.15155029 149.71560669 146.46972656\n",
            " 148.61714172 149.49789429 146.56869507 142.71916199 139.70088196\n",
            " 146.48953247 146.76661682 146.27180481 145.10411072 141.42280579\n",
            " 139.47331238 141.16549683 140.68061829 142.9863739  143.9561615\n",
            " 141.71969604 135.07951355 133.11022949 130.99249268 130.92321777\n",
            " 134.04043579 130.85394287 130.48779297 128.67683411 124.72837067\n",
            " 128.26123047 128.57789612  41.68434906  41.68434906  41.68434906]\n",
            "3 day output [[41.68435]]\n",
            "4 day input [170.94578552 172.44746399 172.05232239 169.45397949 165.55154419\n",
            " 165.21565247 165.51203918 167.98191833 161.64915466 159.43611145\n",
            " 156.99589539 155.32624817 156.05732727 153.93321228 152.66860962\n",
            " 154.08140564 152.59947205 155.47442627 161.46142578 151.98693848\n",
            " 153.4392395  150.53463745 148.88475037 152.61921692 155.0100708\n",
            " 151.86837769 150.90019226 148.61799622 148.95391846 149.93200684\n",
            " 148.03512573 140.76377869 136.53535461 140.73413086 144.34016418\n",
            " 144.63653564 143.6782074  138.40255737 138.72860718 137.30595398\n",
            " 136.67364502 141.26763916 136.71318054 140.6946106  142.01846313\n",
            " 142.12715149 141.66281128 145.49606323 147.64979553 150.50500488\n",
            " 147.55102539 143.05583191 153.86405945 151.49295044 148.83535767\n",
            " 143.2830658  137.20713806 136.93995667 137.47433472 138.04827881\n",
            " 133.4664917  145.34158325 148.14215088 146.73693848 148.47859192\n",
            " 147.24160767 149.15155029 149.71560669 146.46972656 148.61714172\n",
            " 149.49789429 146.56869507 142.71916199 139.70088196 146.48953247\n",
            " 146.76661682 146.27180481 145.10411072 141.42280579 139.47331238\n",
            " 141.16549683 140.68061829 142.9863739  143.9561615  141.71969604\n",
            " 135.07951355 133.11022949 130.99249268 130.92321777 134.04043579\n",
            " 130.85394287 130.48779297 128.67683411 124.72837067 128.26123047\n",
            " 128.57789612  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "4 day output [[41.68435]]\n",
            "5 day input [172.44746399 172.05232239 169.45397949 165.55154419 165.21565247\n",
            " 165.51203918 167.98191833 161.64915466 159.43611145 156.99589539\n",
            " 155.32624817 156.05732727 153.93321228 152.66860962 154.08140564\n",
            " 152.59947205 155.47442627 161.46142578 151.98693848 153.4392395\n",
            " 150.53463745 148.88475037 152.61921692 155.0100708  151.86837769\n",
            " 150.90019226 148.61799622 148.95391846 149.93200684 148.03512573\n",
            " 140.76377869 136.53535461 140.73413086 144.34016418 144.63653564\n",
            " 143.6782074  138.40255737 138.72860718 137.30595398 136.67364502\n",
            " 141.26763916 136.71318054 140.6946106  142.01846313 142.12715149\n",
            " 141.66281128 145.49606323 147.64979553 150.50500488 147.55102539\n",
            " 143.05583191 153.86405945 151.49295044 148.83535767 143.2830658\n",
            " 137.20713806 136.93995667 137.47433472 138.04827881 133.4664917\n",
            " 145.34158325 148.14215088 146.73693848 148.47859192 147.24160767\n",
            " 149.15155029 149.71560669 146.46972656 148.61714172 149.49789429\n",
            " 146.56869507 142.71916199 139.70088196 146.48953247 146.76661682\n",
            " 146.27180481 145.10411072 141.42280579 139.47331238 141.16549683\n",
            " 140.68061829 142.9863739  143.9561615  141.71969604 135.07951355\n",
            " 133.11022949 130.99249268 130.92321777 134.04043579 130.85394287\n",
            " 130.48779297 128.67683411 124.72837067 128.26123047 128.57789612\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "5 day output [[41.68435]]\n",
            "6 day input [172.05232239 169.45397949 165.55154419 165.21565247 165.51203918\n",
            " 167.98191833 161.64915466 159.43611145 156.99589539 155.32624817\n",
            " 156.05732727 153.93321228 152.66860962 154.08140564 152.59947205\n",
            " 155.47442627 161.46142578 151.98693848 153.4392395  150.53463745\n",
            " 148.88475037 152.61921692 155.0100708  151.86837769 150.90019226\n",
            " 148.61799622 148.95391846 149.93200684 148.03512573 140.76377869\n",
            " 136.53535461 140.73413086 144.34016418 144.63653564 143.6782074\n",
            " 138.40255737 138.72860718 137.30595398 136.67364502 141.26763916\n",
            " 136.71318054 140.6946106  142.01846313 142.12715149 141.66281128\n",
            " 145.49606323 147.64979553 150.50500488 147.55102539 143.05583191\n",
            " 153.86405945 151.49295044 148.83535767 143.2830658  137.20713806\n",
            " 136.93995667 137.47433472 138.04827881 133.4664917  145.34158325\n",
            " 148.14215088 146.73693848 148.47859192 147.24160767 149.15155029\n",
            " 149.71560669 146.46972656 148.61714172 149.49789429 146.56869507\n",
            " 142.71916199 139.70088196 146.48953247 146.76661682 146.27180481\n",
            " 145.10411072 141.42280579 139.47331238 141.16549683 140.68061829\n",
            " 142.9863739  143.9561615  141.71969604 135.07951355 133.11022949\n",
            " 130.99249268 130.92321777 134.04043579 130.85394287 130.48779297\n",
            " 128.67683411 124.72837067 128.26123047 128.57789612  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "6 day output [[41.68435]]\n",
            "7 day input [169.45397949 165.55154419 165.21565247 165.51203918 167.98191833\n",
            " 161.64915466 159.43611145 156.99589539 155.32624817 156.05732727\n",
            " 153.93321228 152.66860962 154.08140564 152.59947205 155.47442627\n",
            " 161.46142578 151.98693848 153.4392395  150.53463745 148.88475037\n",
            " 152.61921692 155.0100708  151.86837769 150.90019226 148.61799622\n",
            " 148.95391846 149.93200684 148.03512573 140.76377869 136.53535461\n",
            " 140.73413086 144.34016418 144.63653564 143.6782074  138.40255737\n",
            " 138.72860718 137.30595398 136.67364502 141.26763916 136.71318054\n",
            " 140.6946106  142.01846313 142.12715149 141.66281128 145.49606323\n",
            " 147.64979553 150.50500488 147.55102539 143.05583191 153.86405945\n",
            " 151.49295044 148.83535767 143.2830658  137.20713806 136.93995667\n",
            " 137.47433472 138.04827881 133.4664917  145.34158325 148.14215088\n",
            " 146.73693848 148.47859192 147.24160767 149.15155029 149.71560669\n",
            " 146.46972656 148.61714172 149.49789429 146.56869507 142.71916199\n",
            " 139.70088196 146.48953247 146.76661682 146.27180481 145.10411072\n",
            " 141.42280579 139.47331238 141.16549683 140.68061829 142.9863739\n",
            " 143.9561615  141.71969604 135.07951355 133.11022949 130.99249268\n",
            " 130.92321777 134.04043579 130.85394287 130.48779297 128.67683411\n",
            " 124.72837067 128.26123047 128.57789612  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "7 day output [[41.68435]]\n",
            "8 day input [165.55154419 165.21565247 165.51203918 167.98191833 161.64915466\n",
            " 159.43611145 156.99589539 155.32624817 156.05732727 153.93321228\n",
            " 152.66860962 154.08140564 152.59947205 155.47442627 161.46142578\n",
            " 151.98693848 153.4392395  150.53463745 148.88475037 152.61921692\n",
            " 155.0100708  151.86837769 150.90019226 148.61799622 148.95391846\n",
            " 149.93200684 148.03512573 140.76377869 136.53535461 140.73413086\n",
            " 144.34016418 144.63653564 143.6782074  138.40255737 138.72860718\n",
            " 137.30595398 136.67364502 141.26763916 136.71318054 140.6946106\n",
            " 142.01846313 142.12715149 141.66281128 145.49606323 147.64979553\n",
            " 150.50500488 147.55102539 143.05583191 153.86405945 151.49295044\n",
            " 148.83535767 143.2830658  137.20713806 136.93995667 137.47433472\n",
            " 138.04827881 133.4664917  145.34158325 148.14215088 146.73693848\n",
            " 148.47859192 147.24160767 149.15155029 149.71560669 146.46972656\n",
            " 148.61714172 149.49789429 146.56869507 142.71916199 139.70088196\n",
            " 146.48953247 146.76661682 146.27180481 145.10411072 141.42280579\n",
            " 139.47331238 141.16549683 140.68061829 142.9863739  143.9561615\n",
            " 141.71969604 135.07951355 133.11022949 130.99249268 130.92321777\n",
            " 134.04043579 130.85394287 130.48779297 128.67683411 124.72837067\n",
            " 128.26123047 128.57789612  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "8 day output [[41.68435]]\n",
            "9 day input [165.21565247 165.51203918 167.98191833 161.64915466 159.43611145\n",
            " 156.99589539 155.32624817 156.05732727 153.93321228 152.66860962\n",
            " 154.08140564 152.59947205 155.47442627 161.46142578 151.98693848\n",
            " 153.4392395  150.53463745 148.88475037 152.61921692 155.0100708\n",
            " 151.86837769 150.90019226 148.61799622 148.95391846 149.93200684\n",
            " 148.03512573 140.76377869 136.53535461 140.73413086 144.34016418\n",
            " 144.63653564 143.6782074  138.40255737 138.72860718 137.30595398\n",
            " 136.67364502 141.26763916 136.71318054 140.6946106  142.01846313\n",
            " 142.12715149 141.66281128 145.49606323 147.64979553 150.50500488\n",
            " 147.55102539 143.05583191 153.86405945 151.49295044 148.83535767\n",
            " 143.2830658  137.20713806 136.93995667 137.47433472 138.04827881\n",
            " 133.4664917  145.34158325 148.14215088 146.73693848 148.47859192\n",
            " 147.24160767 149.15155029 149.71560669 146.46972656 148.61714172\n",
            " 149.49789429 146.56869507 142.71916199 139.70088196 146.48953247\n",
            " 146.76661682 146.27180481 145.10411072 141.42280579 139.47331238\n",
            " 141.16549683 140.68061829 142.9863739  143.9561615  141.71969604\n",
            " 135.07951355 133.11022949 130.99249268 130.92321777 134.04043579\n",
            " 130.85394287 130.48779297 128.67683411 124.72837067 128.26123047\n",
            " 128.57789612  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "9 day output [[41.68435]]\n",
            "10 day input [165.51203918 167.98191833 161.64915466 159.43611145 156.99589539\n",
            " 155.32624817 156.05732727 153.93321228 152.66860962 154.08140564\n",
            " 152.59947205 155.47442627 161.46142578 151.98693848 153.4392395\n",
            " 150.53463745 148.88475037 152.61921692 155.0100708  151.86837769\n",
            " 150.90019226 148.61799622 148.95391846 149.93200684 148.03512573\n",
            " 140.76377869 136.53535461 140.73413086 144.34016418 144.63653564\n",
            " 143.6782074  138.40255737 138.72860718 137.30595398 136.67364502\n",
            " 141.26763916 136.71318054 140.6946106  142.01846313 142.12715149\n",
            " 141.66281128 145.49606323 147.64979553 150.50500488 147.55102539\n",
            " 143.05583191 153.86405945 151.49295044 148.83535767 143.2830658\n",
            " 137.20713806 136.93995667 137.47433472 138.04827881 133.4664917\n",
            " 145.34158325 148.14215088 146.73693848 148.47859192 147.24160767\n",
            " 149.15155029 149.71560669 146.46972656 148.61714172 149.49789429\n",
            " 146.56869507 142.71916199 139.70088196 146.48953247 146.76661682\n",
            " 146.27180481 145.10411072 141.42280579 139.47331238 141.16549683\n",
            " 140.68061829 142.9863739  143.9561615  141.71969604 135.07951355\n",
            " 133.11022949 130.99249268 130.92321777 134.04043579 130.85394287\n",
            " 130.48779297 128.67683411 124.72837067 128.26123047 128.57789612\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "10 day output [[41.68435]]\n",
            "11 day input [167.98191833 161.64915466 159.43611145 156.99589539 155.32624817\n",
            " 156.05732727 153.93321228 152.66860962 154.08140564 152.59947205\n",
            " 155.47442627 161.46142578 151.98693848 153.4392395  150.53463745\n",
            " 148.88475037 152.61921692 155.0100708  151.86837769 150.90019226\n",
            " 148.61799622 148.95391846 149.93200684 148.03512573 140.76377869\n",
            " 136.53535461 140.73413086 144.34016418 144.63653564 143.6782074\n",
            " 138.40255737 138.72860718 137.30595398 136.67364502 141.26763916\n",
            " 136.71318054 140.6946106  142.01846313 142.12715149 141.66281128\n",
            " 145.49606323 147.64979553 150.50500488 147.55102539 143.05583191\n",
            " 153.86405945 151.49295044 148.83535767 143.2830658  137.20713806\n",
            " 136.93995667 137.47433472 138.04827881 133.4664917  145.34158325\n",
            " 148.14215088 146.73693848 148.47859192 147.24160767 149.15155029\n",
            " 149.71560669 146.46972656 148.61714172 149.49789429 146.56869507\n",
            " 142.71916199 139.70088196 146.48953247 146.76661682 146.27180481\n",
            " 145.10411072 141.42280579 139.47331238 141.16549683 140.68061829\n",
            " 142.9863739  143.9561615  141.71969604 135.07951355 133.11022949\n",
            " 130.99249268 130.92321777 134.04043579 130.85394287 130.48779297\n",
            " 128.67683411 124.72837067 128.26123047 128.57789612  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "11 day output [[41.68435]]\n",
            "12 day input [161.64915466 159.43611145 156.99589539 155.32624817 156.05732727\n",
            " 153.93321228 152.66860962 154.08140564 152.59947205 155.47442627\n",
            " 161.46142578 151.98693848 153.4392395  150.53463745 148.88475037\n",
            " 152.61921692 155.0100708  151.86837769 150.90019226 148.61799622\n",
            " 148.95391846 149.93200684 148.03512573 140.76377869 136.53535461\n",
            " 140.73413086 144.34016418 144.63653564 143.6782074  138.40255737\n",
            " 138.72860718 137.30595398 136.67364502 141.26763916 136.71318054\n",
            " 140.6946106  142.01846313 142.12715149 141.66281128 145.49606323\n",
            " 147.64979553 150.50500488 147.55102539 143.05583191 153.86405945\n",
            " 151.49295044 148.83535767 143.2830658  137.20713806 136.93995667\n",
            " 137.47433472 138.04827881 133.4664917  145.34158325 148.14215088\n",
            " 146.73693848 148.47859192 147.24160767 149.15155029 149.71560669\n",
            " 146.46972656 148.61714172 149.49789429 146.56869507 142.71916199\n",
            " 139.70088196 146.48953247 146.76661682 146.27180481 145.10411072\n",
            " 141.42280579 139.47331238 141.16549683 140.68061829 142.9863739\n",
            " 143.9561615  141.71969604 135.07951355 133.11022949 130.99249268\n",
            " 130.92321777 134.04043579 130.85394287 130.48779297 128.67683411\n",
            " 124.72837067 128.26123047 128.57789612  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "12 day output [[41.68435]]\n",
            "13 day input [159.43611145 156.99589539 155.32624817 156.05732727 153.93321228\n",
            " 152.66860962 154.08140564 152.59947205 155.47442627 161.46142578\n",
            " 151.98693848 153.4392395  150.53463745 148.88475037 152.61921692\n",
            " 155.0100708  151.86837769 150.90019226 148.61799622 148.95391846\n",
            " 149.93200684 148.03512573 140.76377869 136.53535461 140.73413086\n",
            " 144.34016418 144.63653564 143.6782074  138.40255737 138.72860718\n",
            " 137.30595398 136.67364502 141.26763916 136.71318054 140.6946106\n",
            " 142.01846313 142.12715149 141.66281128 145.49606323 147.64979553\n",
            " 150.50500488 147.55102539 143.05583191 153.86405945 151.49295044\n",
            " 148.83535767 143.2830658  137.20713806 136.93995667 137.47433472\n",
            " 138.04827881 133.4664917  145.34158325 148.14215088 146.73693848\n",
            " 148.47859192 147.24160767 149.15155029 149.71560669 146.46972656\n",
            " 148.61714172 149.49789429 146.56869507 142.71916199 139.70088196\n",
            " 146.48953247 146.76661682 146.27180481 145.10411072 141.42280579\n",
            " 139.47331238 141.16549683 140.68061829 142.9863739  143.9561615\n",
            " 141.71969604 135.07951355 133.11022949 130.99249268 130.92321777\n",
            " 134.04043579 130.85394287 130.48779297 128.67683411 124.72837067\n",
            " 128.26123047 128.57789612  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "13 day output [[41.68435]]\n",
            "14 day input [156.99589539 155.32624817 156.05732727 153.93321228 152.66860962\n",
            " 154.08140564 152.59947205 155.47442627 161.46142578 151.98693848\n",
            " 153.4392395  150.53463745 148.88475037 152.61921692 155.0100708\n",
            " 151.86837769 150.90019226 148.61799622 148.95391846 149.93200684\n",
            " 148.03512573 140.76377869 136.53535461 140.73413086 144.34016418\n",
            " 144.63653564 143.6782074  138.40255737 138.72860718 137.30595398\n",
            " 136.67364502 141.26763916 136.71318054 140.6946106  142.01846313\n",
            " 142.12715149 141.66281128 145.49606323 147.64979553 150.50500488\n",
            " 147.55102539 143.05583191 153.86405945 151.49295044 148.83535767\n",
            " 143.2830658  137.20713806 136.93995667 137.47433472 138.04827881\n",
            " 133.4664917  145.34158325 148.14215088 146.73693848 148.47859192\n",
            " 147.24160767 149.15155029 149.71560669 146.46972656 148.61714172\n",
            " 149.49789429 146.56869507 142.71916199 139.70088196 146.48953247\n",
            " 146.76661682 146.27180481 145.10411072 141.42280579 139.47331238\n",
            " 141.16549683 140.68061829 142.9863739  143.9561615  141.71969604\n",
            " 135.07951355 133.11022949 130.99249268 130.92321777 134.04043579\n",
            " 130.85394287 130.48779297 128.67683411 124.72837067 128.26123047\n",
            " 128.57789612  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "14 day output [[41.68435]]\n",
            "15 day input [155.32624817 156.05732727 153.93321228 152.66860962 154.08140564\n",
            " 152.59947205 155.47442627 161.46142578 151.98693848 153.4392395\n",
            " 150.53463745 148.88475037 152.61921692 155.0100708  151.86837769\n",
            " 150.90019226 148.61799622 148.95391846 149.93200684 148.03512573\n",
            " 140.76377869 136.53535461 140.73413086 144.34016418 144.63653564\n",
            " 143.6782074  138.40255737 138.72860718 137.30595398 136.67364502\n",
            " 141.26763916 136.71318054 140.6946106  142.01846313 142.12715149\n",
            " 141.66281128 145.49606323 147.64979553 150.50500488 147.55102539\n",
            " 143.05583191 153.86405945 151.49295044 148.83535767 143.2830658\n",
            " 137.20713806 136.93995667 137.47433472 138.04827881 133.4664917\n",
            " 145.34158325 148.14215088 146.73693848 148.47859192 147.24160767\n",
            " 149.15155029 149.71560669 146.46972656 148.61714172 149.49789429\n",
            " 146.56869507 142.71916199 139.70088196 146.48953247 146.76661682\n",
            " 146.27180481 145.10411072 141.42280579 139.47331238 141.16549683\n",
            " 140.68061829 142.9863739  143.9561615  141.71969604 135.07951355\n",
            " 133.11022949 130.99249268 130.92321777 134.04043579 130.85394287\n",
            " 130.48779297 128.67683411 124.72837067 128.26123047 128.57789612\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "15 day output [[41.68435]]\n",
            "16 day input [156.05732727 153.93321228 152.66860962 154.08140564 152.59947205\n",
            " 155.47442627 161.46142578 151.98693848 153.4392395  150.53463745\n",
            " 148.88475037 152.61921692 155.0100708  151.86837769 150.90019226\n",
            " 148.61799622 148.95391846 149.93200684 148.03512573 140.76377869\n",
            " 136.53535461 140.73413086 144.34016418 144.63653564 143.6782074\n",
            " 138.40255737 138.72860718 137.30595398 136.67364502 141.26763916\n",
            " 136.71318054 140.6946106  142.01846313 142.12715149 141.66281128\n",
            " 145.49606323 147.64979553 150.50500488 147.55102539 143.05583191\n",
            " 153.86405945 151.49295044 148.83535767 143.2830658  137.20713806\n",
            " 136.93995667 137.47433472 138.04827881 133.4664917  145.34158325\n",
            " 148.14215088 146.73693848 148.47859192 147.24160767 149.15155029\n",
            " 149.71560669 146.46972656 148.61714172 149.49789429 146.56869507\n",
            " 142.71916199 139.70088196 146.48953247 146.76661682 146.27180481\n",
            " 145.10411072 141.42280579 139.47331238 141.16549683 140.68061829\n",
            " 142.9863739  143.9561615  141.71969604 135.07951355 133.11022949\n",
            " 130.99249268 130.92321777 134.04043579 130.85394287 130.48779297\n",
            " 128.67683411 124.72837067 128.26123047 128.57789612  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "16 day output [[41.68435]]\n",
            "17 day input [153.93321228 152.66860962 154.08140564 152.59947205 155.47442627\n",
            " 161.46142578 151.98693848 153.4392395  150.53463745 148.88475037\n",
            " 152.61921692 155.0100708  151.86837769 150.90019226 148.61799622\n",
            " 148.95391846 149.93200684 148.03512573 140.76377869 136.53535461\n",
            " 140.73413086 144.34016418 144.63653564 143.6782074  138.40255737\n",
            " 138.72860718 137.30595398 136.67364502 141.26763916 136.71318054\n",
            " 140.6946106  142.01846313 142.12715149 141.66281128 145.49606323\n",
            " 147.64979553 150.50500488 147.55102539 143.05583191 153.86405945\n",
            " 151.49295044 148.83535767 143.2830658  137.20713806 136.93995667\n",
            " 137.47433472 138.04827881 133.4664917  145.34158325 148.14215088\n",
            " 146.73693848 148.47859192 147.24160767 149.15155029 149.71560669\n",
            " 146.46972656 148.61714172 149.49789429 146.56869507 142.71916199\n",
            " 139.70088196 146.48953247 146.76661682 146.27180481 145.10411072\n",
            " 141.42280579 139.47331238 141.16549683 140.68061829 142.9863739\n",
            " 143.9561615  141.71969604 135.07951355 133.11022949 130.99249268\n",
            " 130.92321777 134.04043579 130.85394287 130.48779297 128.67683411\n",
            " 124.72837067 128.26123047 128.57789612  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "17 day output [[41.68435]]\n",
            "18 day input [152.66860962 154.08140564 152.59947205 155.47442627 161.46142578\n",
            " 151.98693848 153.4392395  150.53463745 148.88475037 152.61921692\n",
            " 155.0100708  151.86837769 150.90019226 148.61799622 148.95391846\n",
            " 149.93200684 148.03512573 140.76377869 136.53535461 140.73413086\n",
            " 144.34016418 144.63653564 143.6782074  138.40255737 138.72860718\n",
            " 137.30595398 136.67364502 141.26763916 136.71318054 140.6946106\n",
            " 142.01846313 142.12715149 141.66281128 145.49606323 147.64979553\n",
            " 150.50500488 147.55102539 143.05583191 153.86405945 151.49295044\n",
            " 148.83535767 143.2830658  137.20713806 136.93995667 137.47433472\n",
            " 138.04827881 133.4664917  145.34158325 148.14215088 146.73693848\n",
            " 148.47859192 147.24160767 149.15155029 149.71560669 146.46972656\n",
            " 148.61714172 149.49789429 146.56869507 142.71916199 139.70088196\n",
            " 146.48953247 146.76661682 146.27180481 145.10411072 141.42280579\n",
            " 139.47331238 141.16549683 140.68061829 142.9863739  143.9561615\n",
            " 141.71969604 135.07951355 133.11022949 130.99249268 130.92321777\n",
            " 134.04043579 130.85394287 130.48779297 128.67683411 124.72837067\n",
            " 128.26123047 128.57789612  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "18 day output [[41.68435]]\n",
            "19 day input [154.08140564 152.59947205 155.47442627 161.46142578 151.98693848\n",
            " 153.4392395  150.53463745 148.88475037 152.61921692 155.0100708\n",
            " 151.86837769 150.90019226 148.61799622 148.95391846 149.93200684\n",
            " 148.03512573 140.76377869 136.53535461 140.73413086 144.34016418\n",
            " 144.63653564 143.6782074  138.40255737 138.72860718 137.30595398\n",
            " 136.67364502 141.26763916 136.71318054 140.6946106  142.01846313\n",
            " 142.12715149 141.66281128 145.49606323 147.64979553 150.50500488\n",
            " 147.55102539 143.05583191 153.86405945 151.49295044 148.83535767\n",
            " 143.2830658  137.20713806 136.93995667 137.47433472 138.04827881\n",
            " 133.4664917  145.34158325 148.14215088 146.73693848 148.47859192\n",
            " 147.24160767 149.15155029 149.71560669 146.46972656 148.61714172\n",
            " 149.49789429 146.56869507 142.71916199 139.70088196 146.48953247\n",
            " 146.76661682 146.27180481 145.10411072 141.42280579 139.47331238\n",
            " 141.16549683 140.68061829 142.9863739  143.9561615  141.71969604\n",
            " 135.07951355 133.11022949 130.99249268 130.92321777 134.04043579\n",
            " 130.85394287 130.48779297 128.67683411 124.72837067 128.26123047\n",
            " 128.57789612  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "19 day output [[41.68435]]\n",
            "20 day input [152.59947205 155.47442627 161.46142578 151.98693848 153.4392395\n",
            " 150.53463745 148.88475037 152.61921692 155.0100708  151.86837769\n",
            " 150.90019226 148.61799622 148.95391846 149.93200684 148.03512573\n",
            " 140.76377869 136.53535461 140.73413086 144.34016418 144.63653564\n",
            " 143.6782074  138.40255737 138.72860718 137.30595398 136.67364502\n",
            " 141.26763916 136.71318054 140.6946106  142.01846313 142.12715149\n",
            " 141.66281128 145.49606323 147.64979553 150.50500488 147.55102539\n",
            " 143.05583191 153.86405945 151.49295044 148.83535767 143.2830658\n",
            " 137.20713806 136.93995667 137.47433472 138.04827881 133.4664917\n",
            " 145.34158325 148.14215088 146.73693848 148.47859192 147.24160767\n",
            " 149.15155029 149.71560669 146.46972656 148.61714172 149.49789429\n",
            " 146.56869507 142.71916199 139.70088196 146.48953247 146.76661682\n",
            " 146.27180481 145.10411072 141.42280579 139.47331238 141.16549683\n",
            " 140.68061829 142.9863739  143.9561615  141.71969604 135.07951355\n",
            " 133.11022949 130.99249268 130.92321777 134.04043579 130.85394287\n",
            " 130.48779297 128.67683411 124.72837067 128.26123047 128.57789612\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "20 day output [[41.68435]]\n",
            "21 day input [155.47442627 161.46142578 151.98693848 153.4392395  150.53463745\n",
            " 148.88475037 152.61921692 155.0100708  151.86837769 150.90019226\n",
            " 148.61799622 148.95391846 149.93200684 148.03512573 140.76377869\n",
            " 136.53535461 140.73413086 144.34016418 144.63653564 143.6782074\n",
            " 138.40255737 138.72860718 137.30595398 136.67364502 141.26763916\n",
            " 136.71318054 140.6946106  142.01846313 142.12715149 141.66281128\n",
            " 145.49606323 147.64979553 150.50500488 147.55102539 143.05583191\n",
            " 153.86405945 151.49295044 148.83535767 143.2830658  137.20713806\n",
            " 136.93995667 137.47433472 138.04827881 133.4664917  145.34158325\n",
            " 148.14215088 146.73693848 148.47859192 147.24160767 149.15155029\n",
            " 149.71560669 146.46972656 148.61714172 149.49789429 146.56869507\n",
            " 142.71916199 139.70088196 146.48953247 146.76661682 146.27180481\n",
            " 145.10411072 141.42280579 139.47331238 141.16549683 140.68061829\n",
            " 142.9863739  143.9561615  141.71969604 135.07951355 133.11022949\n",
            " 130.99249268 130.92321777 134.04043579 130.85394287 130.48779297\n",
            " 128.67683411 124.72837067 128.26123047 128.57789612  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "21 day output [[41.68435]]\n",
            "22 day input [161.46142578 151.98693848 153.4392395  150.53463745 148.88475037\n",
            " 152.61921692 155.0100708  151.86837769 150.90019226 148.61799622\n",
            " 148.95391846 149.93200684 148.03512573 140.76377869 136.53535461\n",
            " 140.73413086 144.34016418 144.63653564 143.6782074  138.40255737\n",
            " 138.72860718 137.30595398 136.67364502 141.26763916 136.71318054\n",
            " 140.6946106  142.01846313 142.12715149 141.66281128 145.49606323\n",
            " 147.64979553 150.50500488 147.55102539 143.05583191 153.86405945\n",
            " 151.49295044 148.83535767 143.2830658  137.20713806 136.93995667\n",
            " 137.47433472 138.04827881 133.4664917  145.34158325 148.14215088\n",
            " 146.73693848 148.47859192 147.24160767 149.15155029 149.71560669\n",
            " 146.46972656 148.61714172 149.49789429 146.56869507 142.71916199\n",
            " 139.70088196 146.48953247 146.76661682 146.27180481 145.10411072\n",
            " 141.42280579 139.47331238 141.16549683 140.68061829 142.9863739\n",
            " 143.9561615  141.71969604 135.07951355 133.11022949 130.99249268\n",
            " 130.92321777 134.04043579 130.85394287 130.48779297 128.67683411\n",
            " 124.72837067 128.26123047 128.57789612  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "22 day output [[41.68435]]\n",
            "23 day input [151.98693848 153.4392395  150.53463745 148.88475037 152.61921692\n",
            " 155.0100708  151.86837769 150.90019226 148.61799622 148.95391846\n",
            " 149.93200684 148.03512573 140.76377869 136.53535461 140.73413086\n",
            " 144.34016418 144.63653564 143.6782074  138.40255737 138.72860718\n",
            " 137.30595398 136.67364502 141.26763916 136.71318054 140.6946106\n",
            " 142.01846313 142.12715149 141.66281128 145.49606323 147.64979553\n",
            " 150.50500488 147.55102539 143.05583191 153.86405945 151.49295044\n",
            " 148.83535767 143.2830658  137.20713806 136.93995667 137.47433472\n",
            " 138.04827881 133.4664917  145.34158325 148.14215088 146.73693848\n",
            " 148.47859192 147.24160767 149.15155029 149.71560669 146.46972656\n",
            " 148.61714172 149.49789429 146.56869507 142.71916199 139.70088196\n",
            " 146.48953247 146.76661682 146.27180481 145.10411072 141.42280579\n",
            " 139.47331238 141.16549683 140.68061829 142.9863739  143.9561615\n",
            " 141.71969604 135.07951355 133.11022949 130.99249268 130.92321777\n",
            " 134.04043579 130.85394287 130.48779297 128.67683411 124.72837067\n",
            " 128.26123047 128.57789612  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "23 day output [[41.68435]]\n",
            "24 day input [153.4392395  150.53463745 148.88475037 152.61921692 155.0100708\n",
            " 151.86837769 150.90019226 148.61799622 148.95391846 149.93200684\n",
            " 148.03512573 140.76377869 136.53535461 140.73413086 144.34016418\n",
            " 144.63653564 143.6782074  138.40255737 138.72860718 137.30595398\n",
            " 136.67364502 141.26763916 136.71318054 140.6946106  142.01846313\n",
            " 142.12715149 141.66281128 145.49606323 147.64979553 150.50500488\n",
            " 147.55102539 143.05583191 153.86405945 151.49295044 148.83535767\n",
            " 143.2830658  137.20713806 136.93995667 137.47433472 138.04827881\n",
            " 133.4664917  145.34158325 148.14215088 146.73693848 148.47859192\n",
            " 147.24160767 149.15155029 149.71560669 146.46972656 148.61714172\n",
            " 149.49789429 146.56869507 142.71916199 139.70088196 146.48953247\n",
            " 146.76661682 146.27180481 145.10411072 141.42280579 139.47331238\n",
            " 141.16549683 140.68061829 142.9863739  143.9561615  141.71969604\n",
            " 135.07951355 133.11022949 130.99249268 130.92321777 134.04043579\n",
            " 130.85394287 130.48779297 128.67683411 124.72837067 128.26123047\n",
            " 128.57789612  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "24 day output [[41.68435]]\n",
            "25 day input [150.53463745 148.88475037 152.61921692 155.0100708  151.86837769\n",
            " 150.90019226 148.61799622 148.95391846 149.93200684 148.03512573\n",
            " 140.76377869 136.53535461 140.73413086 144.34016418 144.63653564\n",
            " 143.6782074  138.40255737 138.72860718 137.30595398 136.67364502\n",
            " 141.26763916 136.71318054 140.6946106  142.01846313 142.12715149\n",
            " 141.66281128 145.49606323 147.64979553 150.50500488 147.55102539\n",
            " 143.05583191 153.86405945 151.49295044 148.83535767 143.2830658\n",
            " 137.20713806 136.93995667 137.47433472 138.04827881 133.4664917\n",
            " 145.34158325 148.14215088 146.73693848 148.47859192 147.24160767\n",
            " 149.15155029 149.71560669 146.46972656 148.61714172 149.49789429\n",
            " 146.56869507 142.71916199 139.70088196 146.48953247 146.76661682\n",
            " 146.27180481 145.10411072 141.42280579 139.47331238 141.16549683\n",
            " 140.68061829 142.9863739  143.9561615  141.71969604 135.07951355\n",
            " 133.11022949 130.99249268 130.92321777 134.04043579 130.85394287\n",
            " 130.48779297 128.67683411 124.72837067 128.26123047 128.57789612\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "25 day output [[41.68435]]\n",
            "26 day input [148.88475037 152.61921692 155.0100708  151.86837769 150.90019226\n",
            " 148.61799622 148.95391846 149.93200684 148.03512573 140.76377869\n",
            " 136.53535461 140.73413086 144.34016418 144.63653564 143.6782074\n",
            " 138.40255737 138.72860718 137.30595398 136.67364502 141.26763916\n",
            " 136.71318054 140.6946106  142.01846313 142.12715149 141.66281128\n",
            " 145.49606323 147.64979553 150.50500488 147.55102539 143.05583191\n",
            " 153.86405945 151.49295044 148.83535767 143.2830658  137.20713806\n",
            " 136.93995667 137.47433472 138.04827881 133.4664917  145.34158325\n",
            " 148.14215088 146.73693848 148.47859192 147.24160767 149.15155029\n",
            " 149.71560669 146.46972656 148.61714172 149.49789429 146.56869507\n",
            " 142.71916199 139.70088196 146.48953247 146.76661682 146.27180481\n",
            " 145.10411072 141.42280579 139.47331238 141.16549683 140.68061829\n",
            " 142.9863739  143.9561615  141.71969604 135.07951355 133.11022949\n",
            " 130.99249268 130.92321777 134.04043579 130.85394287 130.48779297\n",
            " 128.67683411 124.72837067 128.26123047 128.57789612  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "26 day output [[41.68435]]\n",
            "27 day input [152.61921692 155.0100708  151.86837769 150.90019226 148.61799622\n",
            " 148.95391846 149.93200684 148.03512573 140.76377869 136.53535461\n",
            " 140.73413086 144.34016418 144.63653564 143.6782074  138.40255737\n",
            " 138.72860718 137.30595398 136.67364502 141.26763916 136.71318054\n",
            " 140.6946106  142.01846313 142.12715149 141.66281128 145.49606323\n",
            " 147.64979553 150.50500488 147.55102539 143.05583191 153.86405945\n",
            " 151.49295044 148.83535767 143.2830658  137.20713806 136.93995667\n",
            " 137.47433472 138.04827881 133.4664917  145.34158325 148.14215088\n",
            " 146.73693848 148.47859192 147.24160767 149.15155029 149.71560669\n",
            " 146.46972656 148.61714172 149.49789429 146.56869507 142.71916199\n",
            " 139.70088196 146.48953247 146.76661682 146.27180481 145.10411072\n",
            " 141.42280579 139.47331238 141.16549683 140.68061829 142.9863739\n",
            " 143.9561615  141.71969604 135.07951355 133.11022949 130.99249268\n",
            " 130.92321777 134.04043579 130.85394287 130.48779297 128.67683411\n",
            " 124.72837067 128.26123047 128.57789612  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "27 day output [[41.68435]]\n",
            "28 day input [155.0100708  151.86837769 150.90019226 148.61799622 148.95391846\n",
            " 149.93200684 148.03512573 140.76377869 136.53535461 140.73413086\n",
            " 144.34016418 144.63653564 143.6782074  138.40255737 138.72860718\n",
            " 137.30595398 136.67364502 141.26763916 136.71318054 140.6946106\n",
            " 142.01846313 142.12715149 141.66281128 145.49606323 147.64979553\n",
            " 150.50500488 147.55102539 143.05583191 153.86405945 151.49295044\n",
            " 148.83535767 143.2830658  137.20713806 136.93995667 137.47433472\n",
            " 138.04827881 133.4664917  145.34158325 148.14215088 146.73693848\n",
            " 148.47859192 147.24160767 149.15155029 149.71560669 146.46972656\n",
            " 148.61714172 149.49789429 146.56869507 142.71916199 139.70088196\n",
            " 146.48953247 146.76661682 146.27180481 145.10411072 141.42280579\n",
            " 139.47331238 141.16549683 140.68061829 142.9863739  143.9561615\n",
            " 141.71969604 135.07951355 133.11022949 130.99249268 130.92321777\n",
            " 134.04043579 130.85394287 130.48779297 128.67683411 124.72837067\n",
            " 128.26123047 128.57789612  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "28 day output [[41.68435]]\n",
            "29 day input [151.86837769 150.90019226 148.61799622 148.95391846 149.93200684\n",
            " 148.03512573 140.76377869 136.53535461 140.73413086 144.34016418\n",
            " 144.63653564 143.6782074  138.40255737 138.72860718 137.30595398\n",
            " 136.67364502 141.26763916 136.71318054 140.6946106  142.01846313\n",
            " 142.12715149 141.66281128 145.49606323 147.64979553 150.50500488\n",
            " 147.55102539 143.05583191 153.86405945 151.49295044 148.83535767\n",
            " 143.2830658  137.20713806 136.93995667 137.47433472 138.04827881\n",
            " 133.4664917  145.34158325 148.14215088 146.73693848 148.47859192\n",
            " 147.24160767 149.15155029 149.71560669 146.46972656 148.61714172\n",
            " 149.49789429 146.56869507 142.71916199 139.70088196 146.48953247\n",
            " 146.76661682 146.27180481 145.10411072 141.42280579 139.47331238\n",
            " 141.16549683 140.68061829 142.9863739  143.9561615  141.71969604\n",
            " 135.07951355 133.11022949 130.99249268 130.92321777 134.04043579\n",
            " 130.85394287 130.48779297 128.67683411 124.72837067 128.26123047\n",
            " 128.57789612  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906\n",
            "  41.68434906  41.68434906  41.68434906  41.68434906  41.68434906]\n",
            "29 day output [[41.68435]]\n",
            "[[41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594], [41.684349060058594]]\n"
          ]
        }
      ],
      "source": [
        "# demonstrate prediction for next 10 days\n",
        "from numpy import array\n",
        "\n",
        "lst_output=[]\n",
        "n_steps=100\n",
        "i=0\n",
        "while(i<30):\n",
        "\n",
        "    if(len(temp_input)>100):\n",
        "        #print(temp_input)\n",
        "        x_input=np.array(temp_input[1:])\n",
        "        print(\"{} day input {}\".format(i,x_input))\n",
        "        x_input=x_input.reshape(1,-1)\n",
        "        x_input = x_input.reshape((1, n_steps, 1))\n",
        "        #print(x_input)\n",
        "        yhat = model.predict(x_input, verbose=0)\n",
        "        print(\"{} day output {}\".format(i,yhat))\n",
        "        temp_input.extend(yhat[0].tolist())\n",
        "        temp_input=temp_input[1:]\n",
        "        #print(temp_input)\n",
        "        lst_output.extend(yhat.tolist())\n",
        "        i=i+1\n",
        "    else:\n",
        "        x_input = x_input.reshape((1, n_steps,1))\n",
        "        yhat = model.predict(x_input, verbose=0)\n",
        "        print(yhat[0])\n",
        "        temp_input.extend(yhat[0].tolist())\n",
        "        print(len(temp_input))\n",
        "        lst_output.extend(yhat.tolist())\n",
        "        i=i+1\n",
        "\n",
        "\n",
        "print(lst_output)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 99,
      "metadata": {
        "id": "LzWWB2Ozo_P8"
      },
      "outputs": [],
      "source": [
        "day_new=np.arange(1,101)\n",
        "day_pred=np.arange(101,131)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 100,
      "metadata": {
        "id": "HEdUPwKNo_P8"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 101,
      "metadata": {
        "id": "OPUdlFlxo_P8",
        "outputId": "013cf171-2583-43eb-d553-277137ece842",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "756"
            ]
          },
          "metadata": {},
          "execution_count": 101
        }
      ],
      "source": [
        "len(df1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "TtwMrW8eo_P8"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 104,
      "metadata": {
        "id": "6X-2wB2ro_P9",
        "outputId": "e4a2e070-0f1c-4eb1-d692-4bba4d118a12",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7d32a891d050>]"
            ]
          },
          "metadata": {},
          "execution_count": 104
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.plot(day_new,scaler.inverse_transform(df1[656:]))\n",
        "plt.plot(day_pred,scaler.inverse_transform(lst_output))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 105,
      "metadata": {
        "id": "9I3UIQUMo_P9",
        "outputId": "43396794-47ea-4b42-974b-6f374601241d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7d32a89b1750>]"
            ]
          },
          "metadata": {},
          "execution_count": 105
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "df3=df1.tolist()\n",
        "df3.extend(lst_output)\n",
        "plt.plot(df3[1200:])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 106,
      "metadata": {
        "id": "a_elwY-Go_P9"
      },
      "outputs": [],
      "source": [
        "df3=scaler.inverse_transform(df3).tolist()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 107,
      "metadata": {
        "id": "RjUa4KNZo_P9",
        "outputId": "ecdc863f-fda0-40d4-9bdc-70cdc410ccc2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7d32aaa18cd0>]"
            ]
          },
          "metadata": {},
          "execution_count": 107
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.plot(df3)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "v0-czFNoo_P9"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.9"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}